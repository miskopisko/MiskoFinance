<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>